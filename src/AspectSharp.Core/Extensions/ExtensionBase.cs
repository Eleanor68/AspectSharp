using System;

namespace AspectSharp.Core.Extensions
{
    /// <summary>
    /// 1. Class extension
    /// 2. Interface extension
    /// 3. Inheritance compatibility
    /// 4. Generic extension with type constrain
    /// 5. Abstract extension with autogenerated concrete extension according to target
    /// </summary>
    /// <remarks>
    /// Rules:
    /// 1. Extension and extended class must live in the same project
    /// 2. Extension class must be sealed
    /// 3? Generic extensions from referenced assembly are applied to all classes from project
    /// Instance creation:
    /// Scenario 1: No constructors
    /// Scenario 2: One defined constructor
    /// Scenario 3: Multiple constructors
    /// Scenario 3.1: Common inner constructor
    /// Scenario 3.2: Multiple common inner constructors
    /// Scenario 3.3: No inner constructors
    /// </remarks>
    /// <typeparam name="T"></typeparam>
    public abstract class ExtensionBase<T>
    {
        private readonly T extension;

        protected ExtensionBase(T extension)
        {
            this.extension = extension;
        }

        protected T Extension => extension;
    }
}
